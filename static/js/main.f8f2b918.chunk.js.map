{"version":3,"sources":["components/Navigation.js","components/Home.js","components/ProjectItem.js","components/Projects.js","components/WorkItem.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","handleDarkModeToggle","to","exact","activeClassName","onClick","icon","faMoon","size","className","darkModeParticles","color","r","g","b","a","background","Home","darkMode","numParticles","interactive","lineWidth","particleRadius","particleSpeed","id","CardHeader","props","style","backgroundImage","image","CardBody","projectBody","projectTitle","projectDescription","projectUrl","projectTechStack","join","href","target","ProjectItem","projectDetails","projectImage","Projects","projects","map","project","idx","WorkItem","exp","workTimeframe","workRole","workCompany","workDescription","workBulletNotes","note","About","useState","highlightProfiles","setHighlightProfiles","faEnvelope","rel","faLinkedin","faGithub","onMouseOver","onMouseOut","experiences","App","isDarkMode","setIsDarkMode","useEffect","document","body","classList","add","remove","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8f2b918.chunk.js","sourcesContent":["import { faMoon } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport '../styles/Navigation.css'\n\nconst Navigation = ({ handleDarkModeToggle }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <NavLink to='/' exact activeClassName='selected'>\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/projects' activeClassName='selected'>\n            Projects\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/about' activeClassName='selected'>\n            About\n          </NavLink>\n        </li>\n        <li onClick={handleDarkModeToggle}>\n          <FontAwesomeIcon icon={faMoon} size='2x' className='dark-mode-toggle' />\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport Particle from 'react-particle-animation'\n\nimport '../styles/Home.css'\n\nconst darkModeParticles = {\n  color: { r: 236, g: 236, b: 244, a: 255 },\n  background: { r: 46, g: 52, b: 64, a: 255 }\n}\n\nconst Home = ({ darkMode }) => {\n  return (\n    <div className='home-wrapper'>\n      <Particle\n        className='particles'\n        numParticles={300}\n        interactive={false}\n        color={\n          darkMode\n            ? darkModeParticles.color\n            : {\n                r: 59,\n                g: 66,\n                b: 82,\n                a: 255\n              }\n        }\n        background={darkMode ? darkModeParticles.background : { r: 255, g: 255, b: 255, a: 255 }}\n        lineWidth={1.2}\n        particleRadius={1.2}\n        particleSpeed={0.3}\n      />\n      <h1>\n        <span id='hand'>ðŸ‘‹</span> Hi, I'm Tony Lu\n      </h1>\n      <p>A software engineer from New York</p>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport '../styles/ProjectItem.css'\n\nconst ProjectItem = props => {\n  const { projectTitle, projectDescription, projectUrl, projectImage, projectTechStack } =\n    props.projectDetails\n\n  return (\n    <article className='card'>\n      <CardHeader image={projectImage} />\n      <CardBody\n        projectBody={{\n          projectTitle,\n          projectDescription,\n          projectUrl,\n          projectImage,\n          projectTechStack\n        }}\n      />\n    </article>\n  )\n}\n\nconst CardHeader = props => {\n  var style = {\n    backgroundImage: `url(${props.image})`\n  }\n  return <div style={style} className='card-img'></div>\n}\n\nconst CardBody = props => {\n  const { projectTitle, projectDescription, projectUrl, projectTechStack } = props.projectBody\n\n  return (\n    <div className='card-body'>\n      <p className='tech-stack'>{projectTechStack.join(', ')}</p>\n\n      <h2>{projectTitle}</h2>\n\n      <p className='card-description'>{projectDescription}</p>\n\n      <a href={projectUrl} target='blank' className='button'>\n        View Project\n      </a>\n    </div>\n  )\n}\n\nexport default ProjectItem\n","import React from 'react'\nimport ProjectItem from './ProjectItem'\nimport projects from '../data/projectsList.json'\nimport '../styles/Projects.css'\n\nconst Projects = () => {\n  return (\n    <div className='projects-container'>\n      <div className='projects-header'>\n        <h1>Projects</h1>\n      </div>\n      <div className='projects-list'>\n        {projects.map((project, idx) => (\n          <ProjectItem key={idx} projectDetails={project} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Projects\n","import React from 'react'\n\nconst WorkItem = props => {\n  const { workTimeframe, workRole, workCompany, workDescription, workBulletNotes } = props.exp\n\n  return (\n    <div className='exp-item'>\n      <div className='exp-timeframe'>{workTimeframe}</div>\n      <div className='exp-title'>\n        {workRole}, <em>{workCompany}</em>\n      </div>\n      <div className='exp-notes'>\n        {workDescription}\n        {\n          <ul>\n            {workBulletNotes.map((note, idx) => (\n              <li key={idx}>{note}</li>\n            ))}\n          </ul>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default WorkItem\n","import React, { useState } from 'react'\nimport experiences from '../data/experiences.json'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport WorkItem from './WorkItem'\nimport '../styles/About.css'\n\nconst About = () => {\n  const [highlightProfiles, setHighlightProfiles] = useState(false)\n\n  return (\n    <div className='about-wrapper'>\n      <h1>About Me</h1>\n      <div className='about-container'>\n        <div className={`about-profiles ${highlightProfiles ? 'profile-pulse' : ''}`}>\n          <a href='mailto:tonylu23@gmail.com'>\n            <FontAwesomeIcon icon={faEnvelope} size='2x' />\n          </a>\n          <a href='https://www.linkedin.com/in/ynoTL' target='_blank' rel='noopener noreferrer'>\n            <FontAwesomeIcon icon={faLinkedin} size='2x' />\n          </a>\n          <a href='https://github.com/ynoTL23' target='_blank' rel='noopener noreferrer'>\n            <FontAwesomeIcon icon={faGithub} size='2x' />\n          </a>\n        </div>\n        <div className='about-desc'>\n          <p>\n            I am a Computer Science student graduating from CUNY Herbert H. Lehman College with\n            honors. I have experience in languages such as Java, Python and JavaScript as well as\n            frameworks like React. I have previously participated in data science research at Lehman\n            involving classification of animal and medical data. In my free time, I love to play\n            games, listen to music and learn about new developing technologies & trends. I hope to\n            contribute to meaningful projects that create convenience and simplification for daily\n            lives.{' '}\n            <span\n              id='get-in-touch'\n              onMouseOver={() => setHighlightProfiles(true)}\n              onMouseOut={() => setHighlightProfiles(false)}>\n              Feel free to get in touch with me.\n            </span>\n          </p>\n        </div>\n      </div>\n\n      <div className='experience-container'>\n        {/* EDUCATION SECTION */}\n        <div className='education-section'>\n          <h1 className='exp-header'>Education</h1>\n          <div className='exp-item'>\n            <div className='exp-timeframe'>August 2017 - May 2021</div>\n            <div className='exp-title'>CUNY Herbert H. Lehman College</div>\n            <div className='exp-notes'>\n              Bachelor of Science - Computer Science, <em>Magna Cum Laude</em>\n              <br />\n              Phi Beta Kappa\n            </div>\n          </div>\n        </div>\n\n        {/* WORK EXPERIENCE SECTION */}\n        <div className='work-section'>\n          <h1 className='exp-header'>Work</h1>\n\n          {experiences.map((exp, idx) => (\n            <WorkItem key={idx} exp={exp} />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import './App.css'\nimport Navigation from './components/Navigation'\nimport Home from './components/Home'\nimport Projects from './components/Projects'\nimport About from './components/About'\n\nimport { useState, useEffect } from 'react'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(true)\n\n  useEffect(() => {\n    if (isDarkMode) {\n      document.body.classList.add('dark-mode')\n    } else {\n      document.body.classList.remove('dark-mode')\n    }\n  }, [isDarkMode])\n\n  return (\n    <Router>\n      <div className='App'>\n        <div className='bounds-container'>\n          <div className='line top'></div>\n          <div className='line right'></div>\n          <div className='line bottom'></div>\n          <div className='line left'></div>\n        </div>\n\n        <Navigation handleDarkModeToggle={() => setIsDarkMode(!isDarkMode)} />\n\n        <Switch>\n          <Route path='/' exact component={() => <Home darkMode={isDarkMode} />} />\n          <Route path='/projects' component={Projects} />\n          <Route path='/about' component={About} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}